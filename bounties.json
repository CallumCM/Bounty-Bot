[{"__typename": "Bounty", "applicationCount": 8, "cycles": 22000, "deadline": "2023-01-31T00:00:00.000Z", "descriptionPreview": "Problem Description\nWe have an existing Javascript playlist of ~100 videos with associated PDF notes. This playlist needs to be converted into a Javascript tutorial using this documentation (https://building-templates.davidatreplit.repl.co/) and the PDF notes need to be converted into markdown files. This does not require any coding knowledge per se but feel free to write a program to automate this conversion into Tutorials.\n\nAs a bonus incentive, you'll get to work directly with CodeWithHarry on this!\n\nAcceptance Criteria\nA complete Javascript playlist with all 100 lessons and associated Repls.", "id": 916, "slug": "create-a-javascript", "timeCreated": "2023-01-18T17:51:01.443Z", "title": "Create a Javascript Tutorial from existing videos and notes", "user": {"url": "/@anshul"}, "url": "https://replit.com/bounties/@anshul/create-a-javascript", "timestamp": "<t:1675123200:R>", "dollars": "$220.00"}, {"__typename": "Bounty", "applicationCount": 1, "cycles": 20000, "deadline": "2023-02-10T00:00:00.000Z", "descriptionPreview": "Problem Description\n\nCreate a web interface for an MQTT-based chat system that allows users to login and participate in real-time conversations.\nUtilize a free MQTT server, such as HiveMQ, to handle the messaging functionality.\nCreate a chatbot that is able to read and respond to messages within the chat system.\nImplement polling functionality with custom fields, such as asking users what type of food they would like to order for lunch.\nAllow users to save polls as templates, such as asking where they would like to go for lunch (options A/B/C/D).\n\nTechnical Details\n\nA functional web interface for an MQTT-based chat system that includes a chatbot and polling functionality with the ability to save polls as templates.\nThe code should be well-documented and easy to understand.\nBackend in Python\n\nAcceptance Criteria\n\nFunctionality of the web interface and chatbot\nQuality of the user interface and user experience\nProper use of the MQTT server and messaging functionality\nProper implementation...", "id": 919, "slug": "mqtt-based-chat-web", "timeCreated": "2023-01-18T21:19:29.940Z", "title": "MQTT-based Chat Web Interface ", "user": {"url": "/@KaiHoeffner"}, "url": "https://replit.com/bounties/@KaiHoeffner/mqtt-based-chat-web", "timestamp": "<t:1675987200:R>", "dollars": "$200.00"}, {"__typename": "Bounty", "applicationCount": 0, "cycles": 50000, "deadline": "2023-01-22T00:00:00.000Z", "descriptionPreview": "Problem Description\nI would like to have a fine-tuned LLM on an Evernote library for chatbot style question answering that runs in local environment.\n\nEasy, except: I can\u2019t provide you with the Evernote library and the library can\u2019t leave the local environment. Library is approx 25000 words. The local environment has a mac intel CPU and an AMD 32gb GPU (sorry\u2026 no silicon or nvidia .)\n\nYou\u2019ll create an OS X app interface that allows for file picking of Evernote library, storage and interacting with chatbot.\n\nOptional ($250 bonus): model accurately Reports references to training dataset\n\nPossible second phase ($tbd): optimization for silicon chipset.\n\nPossible third phase ($tbd): creation of webapp (much easier)\n\nPrice is for phase 1 alone. Negotiable.\n\nAcceptance Criteria\n\nBenchmarking local app performance against unit test library (approx 25000 words)\n\n(Screen share ok) evaluation of model performance in local environment\n\nTechnical Details\n\nAs above. Please request additional specs.\n...", "id": 920, "slug": "fine-tune-gpt-for-qa", "timeCreated": "2023-01-18T21:59:37.178Z", "title": "fine tune GPT for QA against Evernote library", "user": {"url": "/@ts2013"}, "url": "https://replit.com/bounties/@ts2013/fine-tune-gpt-for-qa", "timestamp": "<t:1674345600:R>", "dollars": "$500.00"}]